declaration:
  call: declare
  version: 0.1
  description: "Description placeholder for 'SUBSCRIBE'"
  method: post
  accepts: json
  returns: json
  namespace: classifier
  allowlist:
    body:
      - field: is_connect
        type: boolean
        description: "Body field 'isConnect'"
    headers:
      - field: cookie
        type: string
        description: "Cookie field"

extract_request_data:
  assign:
    is_connect: ${incoming.body.is_connect}
  next: get_platform_integration_status

get_platform_integration_status:
  call: http.post
  args:
    url: "[#CLASSIFIER_RESQL]/get-platform-integration-status"
    body:
      platform: 'OUTLOOK'
  result: res
  next: assign_db_platform_integration_data

assign_db_platform_integration_data:
  assign:
    db_platform_status: ${res.response.body[0].isConnect}
    subscription_id: ${res.response.body[0].subscriptionId}
  next: validate_request

validate_request:
  switch:
    - condition: ${db_platform_status !== is_connect}
      next: get_token_info
  next: return_already_request

get_token_info:
  call: http.get
  args:
    url: "[#CLASSIFIER_RUUTER_PRIVATE_INTERNAL]/internal/xyz"
  result: res
  next: assign_access_token

assign_access_token:
  assign:
    access_token: ${res.response.body.response.access_token}
  next: check_integration_type

check_integration_type:
  switch:
    - condition: ${is_connect === true && subscription_id === null}
      next: subscribe_outlook
    - condition: ${is_connect === false && subscription_id !== null}
      next: unsubscribe_outlook
  next: return_bad_request

subscribe_outlook:
  call: http.post
  args:
    url: "https://graph.microsoft.com/v1.0/subscriptions"
    headers:
      Authorization: ${'Bearer ' + access_token}
    body:
      changeType: "created,updated"
      notificationUrl: "https://f789-111-223-191-66.ngrok-free.app/classifier/integration/outlook/accept"
      resource: "me/mailFolders('inbox')/messages"
      expirationDateTime: "2024-07-06T21:10:45.9356913Z"
      clientState: "secretClientValue"
  result: res_subscribe
  next: check_subscribe_response

check_subscribe_response:
  switch:
    - condition: ${200 <= res_subscribe.response.statusCodeValue && res_subscribe.response.statusCodeValue < 300}
      next: set_subscription_data
  next: return_bad_request

set_subscription_data:
  call: http.post
  args:
    url: "[#CLASSIFIER_RESQL]/connect-platform"
    body:
      id: ${res_subscribe.response.body.id}
      platform: 'OUTLOOK'
  result: set_status_res
  next: check_db_status

unsubscribe_outlook:
  call: http.delete
  args:
    url: "https://graph.microsoft.com/v1.0/subscriptions/${subscription_id}"
    headers:
      Authorization: ${'Bearer ' + access_token}
  result: res_unsubscribe
  next: check_unsubscribe_response

check_unsubscribe_response:
  switch:
    - condition: ${200 <= res_unsubscribe.response.statusCodeValue && res_unsubscribe.response.statusCodeValue < 300}
      next: remove_subscription_data
  next: return_bad_request

remove_subscription_data:
  call: http.post
  args:
    url: "[#CLASSIFIER_RESQL]/disconnect-platform"
    body:
      platform: 'OUTLOOK'
  result: set_status_res
  next: check_db_status

check_db_status:
  switch:
    - condition: ${200 <= set_status_res.response.statusCodeValue && set_status_res.response.statusCodeValue < 300}
      next: return_ok
  next: return_bad_request

return_ok:
  status: 200
  return: "service successful"
  next: end

return_not_found:
  status: 404
  return: "Subscription not found"
  next: end

return_already_request:
  status: 400
  return: "Already Requested-Bad Request"
  next: end

return_bad_request:
  status: 400
  return: "Bad Request"
  next: end