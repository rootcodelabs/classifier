declaration:
  call: declare
  version: 0.1
  description: "Description placeholder for 'TOGGLE-PLATFORM'"
  method: post
  accepts: json
  returns: json
  namespace: classifier
  allowlist:
    body:
      - field: operation
        type: string
        description: "Body field 'operation'"
      - field: platform
        type: string
        description: "Body field 'platform'"
    headers:
      - field: cookie
        type: string
        description: "Cookie field"

extract_request_data:
  assign:
    operation: ${incoming.body.operation}
    platform: ${incoming.body.platform}
    cookie: ${incoming.headers.cookie}
  next: check_operation

check_operation:
  switch:
    - condition: ${operation === 'enable'}
      next: assign_true
    - condition: ${operation === 'disable'}
      next: assign_false
  next: operation_not_support

assign_true:
  assign:
    is_connect: true
  next: check_platform

assign_false:
  assign:
    is_connect: false
  next: check_platform

check_platform:
  switch:
    - condition: ${platform === 'jira'}
      next: assign_jira_url
    - condition: ${platform === 'outlook'}
      next: assign_outlook_url
    - condition: ${platform === 'pinal'}
      next: assign_pinal_url
  next: platform_not_support

assign_jira_url:
  assign:
    url: "jira/cloud/subscribe"
  next: route_to_platform

assign_outlook_url:
  assign:
    url: "outlook/subscribe"
  next: route_to_platform

assign_pinal_url:
  assign:
    url: "pinal/subscribe"
  next: route_to_platform

route_to_platform:
  call: http.post
  args:
    url: "[#CLASSIFIER_RUUTER_PRIVATE]/classifier/integration/${url}"
    headers:
      type: json
      cookie: ${cookie}
    body:
      is_connect: ${is_connect}
  result: res
  next: check_platform_response_status

check_platform_response_status:
  switch:
    - condition: ${200 <= res.response.statusCodeValue && res.response.statusCodeValue < 300}
      next: assign_success
  next: assign_fail

assign_success:
  assign:
    operation_status: 'success'
  next: assign_response

assign_fail:
  assign:
    operation_status: 'failed'
  next: assign_response

assign_response:
  assign:
    format_res: {
        operation_type: '${operation}',
        operation_status_code: '${res.response.statusCodeValue}',
        operation_status: '${operation_status}'
    }
  next: return_result

return_result:
  return: '${format_res}'
  next: end

operation_not_support:
  status: 400
  return: "Bad Request-Operation not support"
  next: end

platform_not_support:
  status: 400
  return: "Bad Request- Platform not support"
  next: end