declaration:
  call: declare
  version: 0.1
  description: "Description placeholder for 'LABEL'"
  method: post
  accepts: json
  returns: json
  namespace: classifier
  allowlist:
    body:
      - field: issueKey
        type: string
        description: "Body field 'issueId'"
      - field: labels
        type: array
        description: "Body field 'labels'"

extract_request_data:
  assign:
    issue_key: ${incoming.body.issueKey}
    label_list: ${incoming.body.labels}
  next: check_for_request_data

check_for_request_data:
  switch:
    - condition: ${issue_key == null || label_list == null}
      next: return_incorrect_request
  next: get_auth_header

get_auth_header:
  call: http.post
  args:
    url: "[#CLASSIFIER_DMAPPER]/hbs/classifier/get_auth_header"
    headers:
      type: json
    body:
      username: "[#JIRA_USERNAME]"
      token: "[#JIRA_API_TOKEN]"
  result: auth_header
  next: get_jira_issue_info

get_jira_issue_info:
  call: http.get
  args:
    url: "[#JIRA_CLOUD_DOMAIN]/rest/api/3/issue/${issue_key}"
    headers:
      Authorization: ${auth_header.response.body.val}
  result: jira_issue_info
  next: assign_existing_labels

assign_existing_labels:
  assign:
    existing_label_list: ${jira_issue_info.response.body.fields.labels}
  next: merge_labels

merge_labels:
  call: http.post
  args:
    url: "[#CLASSIFIER_DMAPPER]/hbs/classifier/return_label_field_array"
    headers:
      type: json
    body:
      labels: ${label_list}
      existing_labels: ${existing_label_list}
  result: res
  next: set_data

set_data:
  assign:
    all_labels: ${res.response.body}
  next: update_jira_issue

update_jira_issue:
  call: http.put
  args:
    url: "[#JIRA_CLOUD_DOMAIN]/rest/api/3/issue/${issue_key}"
    headers:
      Authorization: ${auth_header.response.body.val}
    body:
      fields: ${all_labels}
  result: res_jira
  next: check_status

check_status:
  switch:
    - condition: ${200 <= res_jira.response.statusCodeValue && res_jira.response.statusCodeValue < 300}
      next: return_ok
  next: return_bad_request

return_ok:
  status: 200
  return: "Jira Ticket Updated"
  next: end

return_bad_request:
  status: 400
  return: "Bad Request"
  next: end

return_incorrect_request:
  status: 400
  return: 'missing labels'
  next: end